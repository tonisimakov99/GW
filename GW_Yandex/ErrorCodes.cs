using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GW_Yandex
{
    public class ErrorCodes
    {
        private Dictionary<int, string> errors;
        private static ErrorCodes instance;
        private ErrorCodes()
        {
            errors = new Dictionary<int, string>();
            this[0] = "";
            this[10] = "Ошибка синтаксического разбора XML-документа.Синтаксис документа нарушен или отсутствуют обязательные элементы XML.";
            this[11] = "Отсутствует или неверно задан идентификатор контрагента(agentId).";
            this[12] = "Отсутствует или неверно задан идентификатор канала приема переводов(subagentId).";
            this[14] = "Отсутствует или неверно задана валюта(currency).";
            this[15] = "Отсутствует или неверно задано время формирования документа(requestDT).";
            this[16] = "Отсутствует или неверно задан идентификатор получателя средств(dstAccount).";
            this[17] = "Отсутствует или неверно задана сумма(amount).";
            this[18] = "Отсутствует или неверно задан номер транзакции(clientOrderId).";
            this[19] = "Отсутствует или неверно задано основание для зачисления перевода(contract).";
            this[21] = "Запрашиваемая операция запрещена для данного типа подключения контрагента.";
            this[26] = "Операция с таким номером транзакции(clientOrderId), но другими параметрами уже выполнялась.";
            this[50] = "Невозможно открыть криптосообщение, ошибка целостности пакета.";
            this[51] = "АСП не подтверждена(данные подписи не совпадают с документом).";
            this[53] = "Запрос подписан неизвестным Яндекс.Деньгам сертификатом.";
            this[55] = "Истек срок действия сертификата в системе контрагента.";
            this[40] = "Счет закрыт.";
            this[41] = "Кошелек в Яндекс.Деньгах заблокирован. Данная операция для этого кошелька запрещена.";
            this[42] = "Счета с таким идентификатором не существует.";
            this[43] = "Превышен лимит на разовое зачисление или лимит остатка на счете получателя.";
            this[44] = "Превышено ограничение на максимальную сумму зачислений за период времени.";
            this[45] = "Недостаточно средств для проведения операции.";
            this[46] = "Сумма операции слишком мала.";
            this[48] = "Ошибка запроса зачисления перевода на банковский счет, карту, мобильный телефон.";
            this[49] = "Попытка пополнить баланс кошелька с корпоративной карты.Кошелек в Яндекс.Деньгах нельзя пополнять с корпоративных карт. Пользователю необходимо использовать другую карту.";
            this[57] = "Кошелек в Яндекс.Деньгах не идентифицирован.Пополнение анонимного кошелька запрещено. Пользователю необходимо идентифицировать кошелек.";
            this[201] = "Превышен лимит остатка на счете получателя(внутренний код, не отправляется контрагентам, используется техническими специалистами Яндекс.Денег)";
            this[30] = "Технические проблемы на стороне Яндекс.Денег.Рекомендуется повторять запрос с разумным интервалом(см.Правила формирования и обработки запросов на зачисление переводов).";
            this[31] = "Получатель перевода отклонил платеж(под получателем понимается сотовый оператор или процессинговый банк).";
            this[105] = "Превышено допустимое время оплаты по данному коду платежа(при оплате наличными через терминалы, салоны связи и пр.). Время действия кода зависит от настроек магазина — получателя платежа.";
            this[110] = "Получатель перевода вернул платеж(под получателем понимается сотовый оператор или процессинговый банк).";
        }
        public string this[int code]
        {
            get => errors[code];
            private set
            {
                errors.Add(code, value);
            }
        }

        public static ErrorCodes Instance
        {
            get
            {
                if (instance == null)
                    instance = new ErrorCodes();
                return instance;
            }
        }
    }
}
